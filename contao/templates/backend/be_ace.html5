<?php

namespace Contao;

if ($GLOBALS['TL_CONFIG']['useCE']):

// Use document.write() here in case ACE is loaded in a subpalette (see #1424)
?>
<script>window.ace || document.write('<script src="<?= $this->asset('js/ace.js', 'contao-components/ace') ?>" charset="utf-8">\x3C/script><script src="<?= $this->asset('js/ext-language_tools.js', 'contao-components/ace') ?>" charset="utf-8">\x3C/script><script src="<?= $this->asset('js/ext-whitespace.js', 'contao-components/ace') ?>" charset="utf-8">\x3C/script>')</script>
<script>
window.ace && window.addEvent('domready', function() {
  let ta = document.getElementById('<?= $this->selector ?>'),
      dom = ace.require("ace/lib/dom"),
      ws = ace.require("ace/ext/whitespace");

  // Create a div to apply the editor to
  let div = document.createElement('div');
  div.id = '<?= $this->selector ?>_div';
  div.className = ta.className;
  ta.parentNode.insertBefore(div, ta.nextSibling);

  // Hide the textarea
  ta.style['display'] = 'none';

  // Instantiate the editor
  let editor = ace.edit('<?= $this->selector ?>_div');
  editor.$blockScrolling = Infinity;
  editor.setTheme((document.documentElement.dataset.colorScheme === 'dark' ? 'ace/theme/twilight' : 'ace/theme/clouds'));
  editor.renderer.setScrollMargin(3, 3, 0, 0);
  editor.renderer.scrollBy(0, -6);
  editor.container.style.lineHeight = 1.45;
  editor.getSession().setValue(ta.value);
  editor.getSession().setMode("ace/mode/<?= Backend::getAceType($this->type) ?>");
  editor.getSession().setUseSoftTabs(false);
  editor.getSession().setUseWrapMode(true);
  editor.setAutoScrollEditorIntoView(true);

  <?php if ($this->readonly): ?>
    editor.setReadOnly(true);
  <?php endif; ?>

  // Auto-detect the indentation
  ws.detectIndentation(editor.getSession());

  // Add the fullscreen command
  editor.commands.addCommand({
    name: 'Fullscreen',
    bindKey: 'F11',
    exec: function(editor) {
      dom.toggleCssClass(document.body, 'ace-fullsize');
      editor.resize();
    }
  });

  // Enable code autocompletion
  editor.setOptions({
    enableSnippets: true,
    enableBasicAutocompletion: true,
    enableLiveAutocompletion: true
  });

  // Disable command conflicts with AltGr (see #5792)
  editor.commands.bindKey('Ctrl-alt-a|Ctrl-alt-e|Ctrl-alt-h|Ctrl-alt-l|Ctrl-alt-s', null);

  // Adjust the height of the editor
  let updateHeight = function() {
    let newHeight
      = editor.getSession().getScreenLength()
      * (editor.renderer.lineHeight || 16);
    editor.container.style['height'] = Math.max(newHeight + 8, 30) + 'px';
    editor.resize();
  };

  editor.on('focus', function() {
    window.dispatchEvent(new Event('store-scroll-offset'));
    updateHeight();
  });

  editor.getSession().on('change', function() {
    ta.value = editor.getValue();
    updateHeight();
  });

  updateHeight();
});
</script>
<?php endif; ?>
