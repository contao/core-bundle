<?php

$this->wrapperAttributes = $this
    ->attr($this->cssID)
    ->addClass([$this->class, 'block'])
    ->addStyle($this->style ?? '')
    ->mergeWith($this->wrapperAttributes)
;

?>

<!-- indexer::stop -->
<div<?= $this->wrapperAttributes ?>>

  <?php if ($this->headline): ?>
    <<?= $this->hl ?>><?= $this->headline ?></<?= $this->hl ?>>
  <?php endif; ?>

  <?php if ($this->message): ?>
    <?php $this->insert('form_message', $this->arrData) ?>
  <?php else: ?>
    <?php $this->insert('form_inline', $this->arrData) ?>
  <?php endif; ?>

</div>
<!-- indexer::continue -->

<?php if ($this->ajax): ?>
  <script<?= $this->attr()->setIfExists('nonce', $this->nonce('script-src')) ?>>
    window.addEventListener('DOMContentLoaded', () => {
      const el = document.querySelector('[data-ajax-form="<?= $this->id ?>"]');

      function request(form, body, callback) {
        const xhr = new XMLHttpRequest();
        xhr.open('POST', form.action, true);
        xhr.setRequestHeader('Accept', 'text/html');
        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
        xhr.setRequestHeader('X-Contao-Ajax-Form', form.querySelector('[name="FORM_SUBMIT"]').value);

        form.ariaBusy = 'true';
        form.dataset.ajaxForm = 'loading';

        xhr.onload = () => {
          form.dispatchEvent(new CustomEvent('ajax-form-onload', {
            bubbles: true,
            detail: { body, form, xhr },
          }));

          form.ariaBusy = 'false';
          form.dataset.ajaxForm = '';

          callback(xhr);
        };

        xhr.send(body || null)
      }

      function initForm(form) {
        form.addEventListener('submit', e => {
          e.preventDefault();

          const formData = new FormData(form);

          // Send the triggered button data as well
          if (e.submitter) {
            formData.append(e.submitter.name, e.submitter.value);

            // Prevent double form submission
            e.submitter.disabled = true;
            setTimeout(() => e.submitter.disabled = false, 30000);
          }

          request(form, formData, xhr => {
            const location = xhr.getResponseHeader('X-Ajax-Location');

            // Handle the redirect header
            if (location) {
              window.location.href = location;
              return;
            }

            const range = document.createRange();
            range.selectNode(form.parentNode);

            const newForm = range.createContextualFragment(xhr.responseText).firstElementChild;
            form.replaceWith(newForm);

            if (!newForm.getAttribute('action')) {
              newForm.action = xhr.responseURL;
            }

            initForm(newForm);
          });
        });
      }

      initForm(el);
    });
  </script>
<?php else: ?>
  <script<?= $this->attr()->setIfExists('nonce', $this->nonce('script-src')) ?>>
    document.currentScript.previousElementSibling.querySelector('form')?.addEventListener('submit', e => {
      // Prevent double form submission
      if (e.submitter) {
        setTimeout(() => e.submitter.disabled = true);
        setTimeout(() => e.submitter.disabled = false, 30000);
      }
    });
  </script>
<?php endif; ?>
